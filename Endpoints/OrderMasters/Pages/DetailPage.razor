@using DaMi.SO.Manager.Components
@using DaMi.SO.Manager.Data.Models
@using DaMi.SO.Manager.Endpoints.OrderDetails
@using DaMi.SO.Manager.Endpoints.OrderDetails.DTO
@using DaMi.SO.Manager.Endpoints.OrderDetails.Pages
@using System.Globalization
@inherits XComponent<OrderMasterEditModel>
@layout _Layout
@inject IHttpContextAccessor httpContextAccessor
@inject IStringLocalizer<ShareResource> L

<div class="row page-titles mx-0">
    <div class="col-sm-4 p-md-0 justify-content-sm-start mt-2 mt-sm-0 d-flex">
        <ol class="breadcrumb">
            <li class="breadcrumb-item">
                <a href="/OrderMaster">
                    @L["Đơn Hàng"]
                </a>
            </li>
            <li class="breadcrumb-item">
                <a href="/OrderMaster/Details/@Model.OrderMaster.RowUniqueId">
                    @Model.OrderMaster.OrderNo
                </a>
            </li>
        </ol>
    </div>
    <div class="col-sm-4 p-md-0 justify-content-sm-center mt-2 mt-sm-0 d-flex">
        @if (Model.OrderMaster.OrderStatusId == "OS10" && (httpContextAccessor.HttpContext?.User.HasClaim(f => f.Type ==
        nameof(Permision.AcceptOrder)) ?? false))
        {
            <a href="/OrderMaster/Accept/@Model.OrderMaster.RowUniqueId" class="btn btn-round btn-primary mx-2">
                <b>@L["Duyệt"]</b>
            </a>
        }
        @if (Permision.AllowCancelStatus.Contains(Model.OrderMaster.OrderStatusId ?? "") &&
        (httpContextAccessor.HttpContext?.User.HasClaim(f => f.Type ==
        nameof(Permision.CancelOrder)) ?? false))
        {
            <button class="btn btn-round btn-warning mx-2" hx-post="/OrderMaster/Cancel/@Model.OrderMaster.RowUniqueId"
                hx-prompt="Lý Do Hủy">
                <b>@L["Hủy"]</b>
            </button>
        }
        @if (Permision.AllowCancelStatus.Contains(Model.OrderMaster.OrderStatusId ?? "") &&
        (httpContextAccessor.HttpContext?.User.HasClaim(f => f.Type ==
        nameof(Permision.SuspendOrder)) ?? false))
        {
            <button class="btn btn-round btn-warning mx-2" hx-post="/OrderMaster/Suspend/@Model.OrderMaster.RowUniqueId"
                hx-prompt="Lý Do Treo">
                <b>@L["Treo"]</b>
            </button>
        }
    </div>
    <div class="col-sm-4 p-md-0 justify-content-sm-end mt-2 mt-sm-0 my-0 d-flex">
        @if (Model.OrderMaster.OrderStatusId == "OS10" &&
        (httpContextAccessor.HttpContext?.User.HasClaim(f => f.Type == nameof(Permision.DeleteOrder)) ?? false))
        {
            <a href="/OrderMaster/Delete/@Model.OrderMaster.RowUniqueId" class="btn btn-round btn-danger mx-2 Delete">
                <b>@L["Xóa"]</b>
            </a>
        }
        @if (Model.OrderMaster.OrderStatusId == "OS10" &&
        (httpContextAccessor.HttpContext?.User.HasClaim(f => f.Type == nameof(Permision.UpdateOrder)) ?? false))
        {
            <a href="/OrderMaster/Edit/@Model.OrderMaster.RowUniqueId" class="btn btn-round btn-warning mx-2">
                <b>@L["Chỉnh sửa"]</b>
            </a>
        }
        @if (Model.OrderMaster.OrderStatusId == "OS10")
        {
            <a href="/OrderMaster" class="btn btn-round btn-primary mx-2">
                <b>@L["Danh sách đơn hàng"]</b>
            </a>
        }
        @if (Model.OrderStatuses
        .Where(f => f.CanChangeStatus || f.IsAcceptStatus)
        .Select(f => f.OrderStatusId)
        .Contains(Model.OrderMaster.OrderStatusId) &&
        (httpContextAccessor.HttpContext?.User.HasClaim(f => f.Type == nameof(Permision.ChangeStatusOrder)) ?? false))
        {
            <div class="row col-md-12">
                <label for="StatusID" class="col-4">
                    @L["Thay đổi trạng thái"]
                </label>
                <select class="form-control selectpicker col-8" aria-placeholder="Thay đổi trạng thái"
                    hx-get="/OrderMaster/Status/@Model.OrderMaster.RowUniqueId" id="StatusID" name="StatusID"
                    hx-target='#OrderStatusId' value="@Model.OrderMaster.OrderStatusId">
                    @foreach (var status in Model.OrderStatuses.Where(f => f.CanChangeStatus))
                    {
                        <option value="@status.OrderStatusId"
                            selected='@(status.OrderStatusId == Model.OrderMaster.OrderStatusId)'>
                            @status.OrderStatusName</option>
                    }
                </select>
            </div>
        }
    </div>
</div>

<ModifyTemplate Model="@Model">
</ModifyTemplate>

<div class="row">
    <div class="col-lg-12">
        <div class="card">
            <div class="card-header">
                <div class="card-title">@L["Đơn hàng chi tiết"]</div>
            </div>
            <div class="card-body">
                <div class="overflow-auto">
                    <OrderDetailTable Model="@Model.OrderDetailModify" ViewMode='@Components.ViewMode.Detail'
                        Action="false"
                        Form="@Model.OrderForms.FirstOrDefault(f => f.OrderFormId == Model.OrderMaster.OrderFormId)"
                        OrderID="@Model.OrderMaster.RowUniqueId">
                    </OrderDetailTable>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row page-titles mx-0">
    <div class="col-sm-4 p-md-0 justify-content-sm-start mt-2 mt-sm-0 d-flex">
        <ol class="breadcrumb">
            <li class="breadcrumb-item">
                <a href="/OrderMaster">
                    @L["Đơn Hàng"]
                </a>
            </li>
            <li class="breadcrumb-item">
                <a href="/OrderMaster/Details/@Model.OrderMaster.RowUniqueId">
                    @Model.OrderMaster.OrderNo
                </a>
            </li>
        </ol>
    </div>
    <div class="col-sm-4 p-md-0 justify-content-sm-center mt-2 mt-sm-0 d-flex">
        @if (Model.OrderMaster.OrderStatusId == "OS10" && (httpContextAccessor.HttpContext?.User.HasClaim(f => f.Type ==
        nameof(Permision.AcceptOrder)) ?? false))
        {
            <a href="/OrderMaster/Accept/@Model.OrderMaster.RowUniqueId" class="btn btn-round btn-primary mx-2">
                <b>@L["Duyệt"]</b>
            </a>
        }
        @if (Permision.AllowCancelStatus.Contains(Model.OrderMaster.OrderStatusId ?? "") &&
        (httpContextAccessor.HttpContext?.User.HasClaim(f => f.Type ==
        nameof(Permision.CancelOrder)) ?? false))
        {
            <button class="btn btn-round btn-warning mx-2" hx-post="/OrderMaster/Cancel/@Model.OrderMaster.RowUniqueId"
                hx-prompt="Lý Do Hủy">
                <b>@L["Hủy"]</b>
            </button>
        }
        @if (Permision.AllowCancelStatus.Contains(Model.OrderMaster.OrderStatusId ?? "") &&
        (httpContextAccessor.HttpContext?.User.HasClaim(f => f.Type ==
        nameof(Permision.SuspendOrder)) ?? false))
        {
            <button class="btn btn-round btn-warning mx-2" hx-post="/OrderMaster/Suspend/@Model.OrderMaster.RowUniqueId"
                hx-prompt="Lý Do Treo">
                <b>@L["Treo"]</b>
            </button>
        }
    </div>
    <div class="col-sm-4 p-md-0 justify-content-sm-end mt-2 mt-sm-0 my-0 d-flex">
        @if (Model.OrderMaster.OrderStatusId == "OS10" &&
        (httpContextAccessor.HttpContext?.User.HasClaim(f => f.Type == nameof(Permision.DeleteOrder)) ?? false))
        {
            <a href="/OrderMaster/Delete/@Model.OrderMaster.RowUniqueId" class="btn btn-round btn-danger mx-2 Delete">
                <b>@L["Xóa"]</b>
            </a>
        }
        @if (Model.OrderMaster.OrderStatusId == "OS10" &&
        (httpContextAccessor.HttpContext?.User.HasClaim(f => f.Type == nameof(Permision.UpdateOrder)) ?? false))
        {
            <a href="/OrderMaster/Edit/@Model.OrderMaster.RowUniqueId" class="btn btn-round btn-warning mx-2">
                <b>@L["Chỉnh sửa"]</b>
            </a>
        }
        @if (Model.OrderMaster.OrderStatusId == "OS10")
        {
            <a href="/OrderMaster" class="btn btn-round btn-primary mx-2">
                <b>@L["Danh sách đơn hàng"]</b>
            </a>
        }
        @if (Model.OrderStatuses
        .Where(f => f.CanChangeStatus || f.IsAcceptStatus)
        .Select(f => f.OrderStatusId)
        .Contains(Model.OrderMaster.OrderStatusId) &&
        (httpContextAccessor.HttpContext?.User.HasClaim(f => f.Type == nameof(Permision.ChangeStatusOrder)) ?? false))
        {
            <div class="row col-md-12">
                <label for="StatusID" class="col-4">
                    @L["Thay đổi trạng thái"]
                </label>
                <select class="form-control selectpicker col-8" aria-placeholder="Thay đổi trạng thái"
                    hx-get="/OrderMaster/Status/@Model.OrderMaster.RowUniqueId" id="StatusID" name="StatusID"
                    hx-target='#OrderStatusId' value="@Model.OrderMaster.OrderStatusId">
                    @foreach (var status in Model.OrderStatuses.Where(f => f.CanChangeStatus))
                    {
                        <option value="@status.OrderStatusId"
                            selected='@(status.OrderStatusId == Model.OrderMaster.OrderStatusId)'>
                            @status.OrderStatusName</option>
                    }
                </select>
            </div>
        }
    </div>
</div>