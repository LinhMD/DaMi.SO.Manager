@using DaMi.SO.Manager.Components
@using DaMi.SO.Manager.Data.Models
@using DaMi.SO.Manager.Endpoints.OrderDetails.DTO
@using System.Globalization
@using DaMi.SO.Manager.Endpoints.OrderMasters
@using DaMi.SO.Manager.Endpoints.OrderMasters.DTO
<tr class="basic-form @(ViewMode == ViewMode.Detail? "" : "no-padding")"
    hx-get="@(Action? $"/OrderDetail/Edit/{detail?.RowUniqueId}?FormID={Form.OrderFormId}" : false)" hx-push-url="false"
    hx-target="#row_@(detail is not null? detail.RowUniqueId.ToString() : "new_row")" hx-swap="outerHTML"
    hx-trigger="dblclick" id="row_@(detail is not null? detail.RowUniqueId.ToString() : "new_row")">
    @if (ViewMode == ViewMode.Detail)
    {
    }
    else
    {
        <form action="/OrderDetail/@ViewMode/@detail?.RowUniqueId" hx-boost="true" hx-swap='outerHTML'
            onsubmit="rowSubmit('@detail?.RowUniqueId')"
            hx-target='#row_@(detail is not null? detail.RowUniqueId.ToString() : "new_row")'
            id="form_@(detail is not null? detail.RowUniqueId.ToString() : "new_row")" method="post">
        </form>

        <input type="hidden" form="form_@(detail is not null? detail.RowUniqueId.ToString() : "new_row")"
            name="@nameof(detail.RowUniqueId)" value="@detail?.RowUniqueId">
        <input type="hidden" form="form_@(detail is not null? detail.RowUniqueId.ToString() : "new_row")"
            name="@nameof(detail.ExchangeRate)" value="@(detail?.ExchangeRate )">
        <input type="hidden" form="form_@(detail is not null? detail.RowUniqueId.ToString() : "new_row")"
            name="@nameof(detail.OrderId)" value="@(Order?.RowUniqueId ?? OrderID)">
    }
    <td>
        @if (ViewMode == ViewMode.Detail)
        {
            @(detail?.ItemId ?? "")
        }
        else
        {
            <input type="hidden" value="@(detail?.ItemId ?? "")" name="@nameof(detail.ItemId)"
                form="form_@(detail is not null? detail.RowUniqueId.ToString() : "new_row")"
                id="@nameof(detail.ItemId)_@(detail?.RowUniqueId)">
            <select
                hx-get="/OrderDetail/@(ViewMode == ViewMode.Edit? $"{ViewMode}/{detail?.RowUniqueId}": ViewMode)?FormID=@(Form.OrderFormId)&OrderId=@(Order?.RowUniqueId ?? detail?.OrderId)"
                hx-target='#row_@(detail is not null? detail.RowUniqueId.ToString() : "new_row")' hx-swap='outerHTML'
                form="form_@(detail is not null? detail.RowUniqueId.ToString() : "new_row")"
                name="@nameof(detail.ItemId)Select" class="form-control selectpicker "
                id="@nameof(detail.ItemId)_@(detail?.RowUniqueId)_select" value="@(detail?.ItemId ?? "")">
                <option value="">
                </option>
                @foreach (var item in Model.FullItemMap.Keys)
                {
                    <option value="@item" selected='@(item == detail?.ItemId)'>
                        @item
                    </option>
                }
            </select>
            <ErrorMember Errors="@Model.Errors" MemberName="@nameof(detail.ItemId)" />
            <script>
                var select = new SlimSelect({
                    select: '#@nameof(detail.ItemId)_@(detail is not null ? detail.RowUniqueId.ToString() : "editing")_select',
                    events: {
                        afterChange: (newVal) => {
                            $("#@nameof(detail.ItemId)_@(detail is not null ? detail.RowUniqueId.ToString() : "editing")").val(newVal[0]?.value ?? "");
                        }
                    }
                });
            </script>
        }
    </td>
    <td>
        @if (ViewMode == ViewMode.Detail)
        {
            <div name='ItemName' id="ItemName_@(detail?.RowUniqueId)">
                @(FullItem?.ItemName)
            </div>
        }
        else
        {
            <input type="hidden" value="@(detail?.ItemId ?? "")" name="@nameof(detail.ItemId)"
                form="form_@(detail is not null? detail.RowUniqueId.ToString() : "new_row")"
                id="@nameof(detail.ItemId)_@(detail?.RowUniqueId)">
            <select style="min-height: auto;"
                hx-get="/OrderDetail/@(ViewMode == ViewMode.Edit? $"{ViewMode}/{detail?.RowUniqueId}": ViewMode)?FormID=@(Form.OrderFormId)&OrderId=@(Order?.RowUniqueId ?? detail?.OrderId)"
                hx-target='#row_@(detail is not null? detail.RowUniqueId.ToString() : "new_row")' hx-swap='outerHTML'
                name="@nameof(detail.ItemId)Select" class="form-control selectpicker "
                id="@nameof(FullItem.ItemName)_@(detail?.RowUniqueId)_select" value="@(detail?.ItemId ?? "")">
                <option value="">
                </option>
                @foreach (var item in Model.FullItemMap.Keys)
                {
                    <option value="@item" selected='@(item == detail?.ItemId)'>
                        @Model.FullItemMap[item].ItemName
                    </option>
                }
            </select>
            <script>
                var select = new SlimSelect({
                    select: '#@nameof(FullItem.ItemName)_@(detail?.RowUniqueId)_select',
                });
            </script>
        }
    </td>
    <td>
        <div name='InvUnitOfMeasr' id="InvUnitOfMeasr_@(detail?.RowUniqueId)">
            @(FullItem?.InvUnitOfMeasr)
        </div>
    </td>
    <td>
        @if (ViewMode == ViewMode.Detail)
        {
            @((detail?.Quantity ?? 0))
        }
        else
        {
            <input type="text" value="@detail?.Quantity" class="form-control"
                oninput="calculatePrice('@detail?.RowUniqueId')" min="0"
                form="form_@(detail is not null? detail.RowUniqueId.ToString() : "new_row")" name="@nameof(detail.Quantity)"
                id="@nameof(detail.Quantity)_@(detail?.RowUniqueId)" />
            <ErrorMember Errors="@Model.Errors" MemberName="@nameof(detail.Quantity)" />
        }

    </td>
    <td>
        @if (ViewMode == ViewMode.Detail)
        {
            <div class="currency">
                @((detail?.ConvertPrice ?? 0).ToString("N0", CultureInfo.CurrentCulture))
            </div>
        }
        else
        {
            <input type="text" readonly="@(!FullItem?.AllowEditItemAmount ?? true)" value="@detail?.ConvertPrice"
                class="form-control currency" oninput="calculatePrice('@detail?.RowUniqueId')" min="0"
                form="form_@(detail is not null? detail.RowUniqueId.ToString() : "new_row")"
                name="@nameof(detail.ConvertPrice)" id="@nameof(detail.ConvertPrice)_@(detail?.RowUniqueId)" />
            <ErrorMember Errors="@Model.Errors" MemberName="@nameof(detail.ConvertPrice)" />
            <script>
                mask(document.getElementById('@nameof(detail.ConvertPrice)_@(detail?.RowUniqueId)'));
            </script>
        }
    </td>
    <td>
        <div class="currency" name='ConvertAmount' id="@nameof(detail.ConvertAmount)_@(detail?.RowUniqueId)">
            @((detail?.ConvertAmount ?? 0).ToString("N0", CultureInfo.CurrentCulture))
        </div>
    </td>
    @if (Order?.CurrencyId == "USD")
    {
        <td>
            @if (ViewMode == ViewMode.Detail)
            {
                <div class="currency">
                    @((detail?.OriginalPrice ?? 0).ToString("N0", CultureInfo.CurrentCulture))
                </div>
            }
            else
            {
                <input type="text" readonly="@(!FullItem?.AllowEditItemAmount ?? true)" value="@detail?.OriginalPrice"
                    class="form-control currency" oninput="calculatePrice('@detail?.RowUniqueId')" min="0"
                    form="form_@(detail is not null? detail.RowUniqueId.ToString() : "new_row")"
                    name="@nameof(detail.OriginalPrice)" id="@nameof(detail.OriginalPrice)_@(detail?.RowUniqueId)" />
                <ErrorMember Errors="@Model.Errors" MemberName="@nameof(detail.OriginalPrice)" />

                <script>
                    mask(document.getElementById('@nameof(detail.OriginalPrice)_@(detail?.RowUniqueId)'));
                </script>
            }
        </td>
        <td>
            <div class="currency" name='OriginalAmount' id="@nameof(detail.OriginalAmount)_@(detail?.RowUniqueId)">
                @((detail?.OriginalAmount ?? 0).ToString("N0", CultureInfo.CurrentCulture))
            </div>
        </td>
    }
    <td>
        @if (ViewMode == ViewMode.Detail)
        {
            <div class="currency" name='TaxRate' id="@nameof(detail.TaxRate)_@(detail?.RowUniqueId)">
                @Convert.ToInt64(detail?.TaxRate)
            </div>
        }
        else
        {
            <input type="text" readonly value="@Convert.ToInt64(detail?.TaxRate)" class="form-control currency"
                oninput="calculatePrice('@detail?.RowUniqueId')" min="0"
                form="form_@(detail is not null? detail.RowUniqueId.ToString() : "new_row")" name="@nameof(detail.TaxRate)"
                id="@nameof(detail.TaxRate)_@(detail?.RowUniqueId)" />
            <ErrorMember Errors="@Model.Errors" MemberName="@nameof(detail.TaxRate)" />
        }
    </td>
    @if (Order?.CurrencyId == "USD")
    {
        <td class="currency">
            <div class="currency" name='OriginalTaxAmount' id="@nameof(detail.OriginalTaxAmount)_@(detail?.RowUniqueId)">
                @((detail?.OriginalTaxAmount ?? 0).ToString("N0", CultureInfo.CurrentCulture))
            </div>
        </td>
    }
    <td class="currency">
        <div class="currency" name='ConvertTaxAmount' id="@nameof(detail.ConvertTaxAmount)_@(detail?.RowUniqueId)">
            @((detail?.ConvertTaxAmount ?? 0).ToString("N0", CultureInfo.CurrentCulture))
        </div>
    </td>
    <td class="currency">
        @if (ViewMode == ViewMode.Detail)
        {
            @(Convert.ToInt64(detail?.DiscountPercent))
        }
        else
        {
            <input type="text" class="form-control currency" oninput="calculatePrice('@detail?.RowUniqueId')"
                form="form_@(detail is not null? detail.RowUniqueId.ToString() : "new_row")"
                value="@(Convert.ToInt64(detail?.DiscountPercent))" name="@nameof(detail.DiscountPercent)"
                id="@nameof(detail.DiscountPercent)_@(detail?.RowUniqueId)" />
            <ErrorMember Errors="@Model.Errors" MemberName="@nameof(detail.DiscountPercent)" />
        }
    </td>
    @if (Order?.CurrencyId == "USD")
    {
        <td class="currency">
            @if (ViewMode == ViewMode.Detail)
            {
                <div class="currency" name='OriginalDiscAmount' id="@nameof(detail.OriginalDiscAmount)_@(detail?.RowUniqueId)">
                    @((detail?.OriginalDiscAmount ?? 0).ToString("N0", CultureInfo.CurrentCulture))
                </div>
            }
            else
            {
                <input type="text" class="form-control currency" onload="mask(this)" oninput="calculateTotal()"
                    form="form_@(detail is not null? detail.RowUniqueId.ToString() : "new_row")"
                    value="@(Convert.ToInt64(detail?.OriginalDiscAmount))" name="@nameof(detail.OriginalDiscAmount)"
                    id="@nameof(detail.OriginalDiscAmount)_@(detail?.RowUniqueId)" />
                <ErrorMember Errors="@Model.Errors" MemberName="@nameof(detail.OriginalDiscAmount)" />

                <script>
                    mask(document.getElementById('@nameof(detail.OriginalDiscAmount)_@(detail?.RowUniqueId)'));
                </script>
            }
        </td>
    }
    <td class="currency">
        @if (ViewMode == ViewMode.Detail)
        {
            <div class="currency" name='ConvertDiscAmount' id="@nameof(detail.ConvertDiscAmount)_@(detail?.RowUniqueId)">
                @((detail?.ConvertDiscAmount ?? 0).ToString("N0", CultureInfo.CurrentCulture))
            </div>
        }
        else
        {
            <input type="text" class="form-control currency" onload="mask(this)" oninput="calculateTotal()"
                form="form_@(detail is not null? detail.RowUniqueId.ToString() : "new_row")"
                value="@(Convert.ToInt64(detail?.ConvertDiscAmount))" name="@nameof(detail.ConvertDiscAmount)"
                id="@nameof(detail.ConvertDiscAmount)_@(detail?.RowUniqueId)" />
            <ErrorMember Errors="@Model.Errors" MemberName="@nameof(detail.ConvertDiscAmount)" />

            <script>
                mask(document.getElementById('@nameof(detail.ConvertDiscAmount)_@(detail?.RowUniqueId)'));
            </script>
        }
    </td>
    @if (Form.HasByTaxCode)
    {
        <td>
            @if (ViewMode == ViewMode.Detail)
            {
                @(FullItem?.AllowEditNumOfTaxCode ?? false ? detail?.NumOfTaxCode : FullItem?.DefNumOfTaxCode)
            }
            else
            {
                <input type="number" readonly="@(!FullItem?.AllowEditNumOfTaxCode ?? true)" class="form-control" min='0'
                    value="@(FullItem?.AllowEditNumOfTaxCode ?? false ? detail?.NumOfTaxCode : FullItem?.DefNumOfTaxCode)"
                    name="@nameof(detail.NumOfTaxCode)"
                    form="form_@(detail is not null? detail.RowUniqueId.ToString() : "new_row")"
                    id="@nameof(detail.NumOfTaxCode)_@(detail?.RowUniqueId)" />
                <ErrorMember Errors="@Model.Errors" MemberName="@nameof(detail.NumOfTaxCode)" />
            }
        </td>
    }
    <td>
        @if (ViewMode == ViewMode.Detail)
        {
            @(detail?.TaxCode)
        }
        else
        {
            <input type="hidden" id="@nameof(detail.TaxCode)_@(detail?.RowUniqueId)"
                form="form_@(detail is not null? detail.RowUniqueId.ToString() : "new_row")" name="@nameof(detail.TaxCode)"
                value="@detail?.TaxCode" />
            <select style="height: 80%;" name="@nameof(detail.TaxCode)_select" class="form-control selectpicker"
                id="@nameof(detail.TaxCode)_@(detail?.RowUniqueId)_select" multiple="multiple"
                form="form_@(detail is not null? detail.RowUniqueId.ToString() : "new_row")">
                @foreach (var item in GetTaxCode())
                {
                    <option value="@item" selected=@(detail?.TaxCode?.Contains(item))>
                        @item
                    </option>
                }
            </select>
            <ErrorMember Errors="@Model.Errors" MemberName="@nameof(detail.TaxCode)" />
            <script>
                new SlimSelect({
                    select: '#@nameof(detail.TaxCode)_@(detail?.RowUniqueId)_select',
                    events: {
                        search: (search, currentData) => {
                            return new Promise((resolve, reject) => {

                                if (search.length >= 10) {
                                    fetch(`/TaxCode?taxcode=${search}&customer=@Order?.CustomerId`, {
                                        method: 'GET',
                                    }).then((response) => response.json()).then((data) => {
                                        if (data.status == 400) {
                                            reject('Mã số thuế không hợp lệ');
                                        } else {
                                            resolve(data.map(f => {
                                                return {
                                                    text: f.taxCodeId,
                                                    value: f.taxCodeId
                                                }
                                            }))
                                        }
                                    });
                                } else {
                                    reject('Mã số thuế tối thiểu có 10 kí tự');
                                }
                            })
                        },
                        afterChange: (newVal) => {
                            $("#@nameof(detail.TaxCode)_@(detail?.RowUniqueId)").val(newVal.map(f => f.value).join(','));
                        }
                    }
                })
            </script>
        }

    </td>

    @if (Form.HasByPc)
    {
        <td>
            @if (ViewMode == ViewMode.Detail)
            {
                @(FullItem?.AllowEditNumOfUser ?? false ? detail?.NumOfPc : FullItem?.DefNumOfPc)
            }
            else
            {
                <input type="number" readonly="@(!FullItem?.AllowEditNumOfPc ?? true)" class="form-control" min='0'
                    value="@(FullItem?.AllowEditNumOfUser??false ? detail?.NumOfPc : FullItem?.DefNumOfPc)"
                    name="@nameof(detail.NumOfPc)" form="form_@(detail is not null? detail.RowUniqueId.ToString() : "new_row")"
                    id="@nameof(detail.NumOfPc)_@(detail?.RowUniqueId)" />
                <ErrorMember Errors="@Model.Errors" MemberName="@nameof(detail.NumOfPc)" />
            }
        </td>
    }
    @if (Form.HasByNumData)
    {
        <td>
            @if (ViewMode == ViewMode.Detail)
            {
                @(FullItem?.AllowEditNumOfData ?? false ? detail?.NumOfData : FullItem?.DefNumOfData)
            }
            else
            {
                <input type="number" readonly="@(!FullItem?.AllowEditNumOfData ?? true)" class="form-control" min='0'
                    form="form_@(detail is not null? detail.RowUniqueId.ToString() : "new_row")"
                    value="@(FullItem?.AllowEditNumOfData ??false ? detail?.NumOfData : FullItem?.DefNumOfData)"
                    name="@nameof(detail.NumOfData)" id="@nameof(detail.NumOfData)_@(detail?.RowUniqueId)" />
                <ErrorMember Errors="@Model.Errors" MemberName="@nameof(detail.NumOfData)" />
            }
        </td>
    }

    @if (Form.HasByQtyInvc)
    {
        <td>
            @if (ViewMode == ViewMode.Detail)
            {
                @(FullItem?.AllowEditNumOfInv ?? false ? detail?.NumOfInv : FullItem?.DefNumOfInv)
            }
            else
            {
                <input type="number" readonly="@(!FullItem?.AllowEditNumOfInv ?? true)" class="form-control" min='0'
                    form="form_@(detail is not null? detail.RowUniqueId.ToString() : "new_row")"
                    value="@(FullItem?.AllowEditNumOfInv ??false ? detail?.NumOfInv : FullItem?.DefNumOfInv)"
                    name="@nameof(detail.NumOfInv)" id="@nameof(detail.NumOfInv)_@(detail?.RowUniqueId)" />
                <ErrorMember Errors="@Model.Errors" MemberName="@nameof(detail.NumOfInv)" />
            }
        </td>
    }
    @if (Form.HasByUser)
    {
        <td>
            @if (ViewMode == ViewMode.Detail)
            {
                @(FullItem?.AllowEditNumOfUser ?? false ? detail?.NumOfUser : FullItem?.DefNumOfUser)
            }
            else
            {
                <input type="number" class="form-control " readonly="@(!FullItem?.AllowEditNumOfUser ?? true)"
                    value="@(FullItem?.AllowEditNumOfUser??false ? detail?.NumOfUser : FullItem?.DefNumOfUser)"
                    name="@nameof(detail.NumOfUser)" min='0'
                    form="form_@(detail is not null? detail.RowUniqueId.ToString() : "new_row")"
                    id="@nameof(detail.NumOfUser)_@(detail?.RowUniqueId)" />
                <ErrorMember Errors="@Model.Errors" MemberName="@nameof(detail.NumOfUser)" />
            }
        </td>
    }
    @if (Form.HasByDiskSize)
    {
        <td>
            @if (ViewMode == ViewMode.Detail)
            {
                @(FullItem?.AllowEditiCloudDataSize ?? false ? detail?.ICloudDataSize : FullItem?.DefiCloudDataSize)
            }
            else
            {
                <input type="number" class="form-control " readonly="@(!FullItem?.AllowEditiCloudDataSize ?? true)"
                    value="@(FullItem?.AllowEditiCloudDataSize??false ? detail?.ICloudDataSize : FullItem?.DefiCloudDataSize)"
                    name="@nameof(detail.ICloudDataSize)" min='0'
                    form="form_@(detail is not null? detail.RowUniqueId.ToString() : "new_row")"
                    id="@nameof(detail.ICloudDataSize)_@(detail?.RowUniqueId)" />
                <ErrorMember Errors="@Model.Errors" MemberName="@nameof(detail.ICloudDataSize)" />
            }
        </td>
    }

    @if (Form.HasByTime)
    {
        <td>
            @if (ViewMode == ViewMode.Detail)
            {
                @(detail?.StartDate is not null ? detail.StartDate.Value.ToString(CultureInfo.CurrentCulture) : "")
            }
            else
            {
                <input data-provide="datepicker" type="date" name="@nameof(detail.StartDate)"
                    form="form_@(detail is not null? detail.RowUniqueId.ToString() : "new_row")"
                    id="@nameof(detail.StartDate)_@(detail?.RowUniqueId)"
                    min='@(Order?.OrderDate is not null ? Order.OrderDate.Value.ToString("yyyy-MM-dd") : "")'
                    value="@(detail?.StartDate is not null ? detail.StartDate.Value.ToString("yyyy-MM-dd") : "")"
                    class="form-control">
                <ErrorMember Errors="@Model.Errors" MemberName="@nameof(detail.StartDate)" />
            }
        </td>
        <td>
            @if (ViewMode == ViewMode.Detail)
            {
                @(FullItem?.AllowEditNumOfMonth ?? false ? detail?.NumOfMonth : FullItem?.DefNumOfMonth)
            }
            else
            {
                <input readonly="@(!FullItem?.AllowEditNumOfMonth ?? true)" type="number" name="@nameof(detail.NumOfMonth)"
                    min='0' form="form_@(detail is not null? detail.RowUniqueId.ToString() : "new_row")"
                    id="@nameof(detail.NumOfMonth)_@(detail?.RowUniqueId)"
                    value="@(FullItem?.AllowEditNumOfMonth ?? false? detail?.NumOfMonth : FullItem?.DefNumOfMonth )"
                    class="form-control">
                <ErrorMember Errors="@Model.Errors" MemberName="@nameof(detail.NumOfMonth)" />
            }
        </td>
    }
    @if (ViewMode == ViewMode.Detail)
    {
        <td class="px-0  justify-content-center">
            <a href="/OrderDetail/Edit/@detail?.RowUniqueId?FormID=@(Form.OrderFormId)" hx-push-url="false"
                hx-target="#row_@(detail is not null? detail.RowUniqueId.ToString() : "new_row")" hx-swap="outerHTML">
                <span class="mdi mdi-pencil"></span>
            </a>
            <button hx-delete="/OrderDetail/@detail?.RowUniqueId" hx-confirm="Bạn có muốn xóa chi tiết dơn hàng?"
                hx-on:htmx:afterSwap='calculatePrice("@detail?.RowUniqueId")'
                hx-target="#row_@(detail is not null? detail.RowUniqueId.ToString() : "new_row")" hx-swap="outerHTML"
                class="btn btn-link mx-0 px-0">
                <span class="mdi mdi-delete text-danger"></span>
            </button>
        </td>
    }
    @if (ViewMode == ViewMode.Edit)
    {
        <td class="px-0  justify-content-center">
            <input type="submit" class="btn btn-success" value="Lưu" hx-push-url="false"
                form='form_@(detail is not null? detail.RowUniqueId.ToString() : "new_row")'>
            <button class="btn btn-dark" hx-get='/OrderDetail/Detail/@detail?.RowUniqueId?FormID=@(Form.OrderFormId)'
                hx-swap='outerHTML' hx-push-url="false"
                hx-target='#row_@(detail is not null? detail.RowUniqueId.ToString() : "new_row")'>Hủy</button>
        </td>
    }
    @if (ViewMode == ViewMode.Create)
    {
        <td class="px-0  justify-content-center">
            <input type="submit" class="btn btn-success" value="Lưu" hx-on:click="$('#add-new-btn').removeAttr('disabled');"
                hx-push-url="false" form="form_@(detail is not null? detail.RowUniqueId.ToString() : "new_row")">
            <button onclick="$('#add-new-btn').removeAttr('disabled');document.getElementById('row_').remove();"
                hx-push-url="false" class="btn btn-dark">Hủy</button>
        </td>
    }
</tr>


@code {
    [Parameter] public ViewMode ViewMode { get; set; } = ViewMode.Detail;
    [Parameter] public OrderDetailModifyModel Model { get; set; } = null!;
    [Parameter] public OrderDetailSimpleView? detail { get; set; } = null!;
    [Parameter] public Dictionary<string, string>? Errors { get; set; }
    [Parameter] public ViwFullItem FullItem { get; set; } = new();
    [Parameter] public OrderMasterDetailView? Order { get; set; } = null!;

    [Parameter] public Guid? OrderID { get; set; } = null!;
    [Parameter] public OrderForm Form { get; set; } = null!;
    [Parameter] public bool Action { get; set; }
    private IEnumerable<string>? Taxcodes;
    public IEnumerable<string> GetTaxCode()
    {
        if (Taxcodes is null)
        {
            var detailTaxcodes = detail?.TaxCode?.Split(',') ?? [];
            HashSet<string> taxcodes = new();
            Model.TaxCodes.ToList().ForEach(s => taxcodes.Add(s.TaxCodeId));
            detailTaxcodes.ToList().ForEach(s => taxcodes.Add(s));
            Taxcodes = taxcodes;
        }
        return Taxcodes;
    }
}