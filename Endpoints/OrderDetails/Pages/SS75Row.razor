@using DaMi.SO.Manager.Components
@using DaMi.SO.Manager.Data.Models
@using DaMi.SO.Manager.Endpoints.OrderDetails.DTO
@using System.Globalization
<tr class="basic-form @(ViewMode == ViewMode.Detail? "" : "no-padding")"
    hx-on:htmx:afterSwap='calculatePrice(" @detail?.RowUniqueId")'
    id="row_@(detail is not null? detail.RowUniqueId.ToString() : "new_row")">
    @if (ViewMode == ViewMode.Detail)
    {
    }
    else
    {
        <form action="/OrderDetail/@ViewMode/@detail?.RowUniqueId" hx-boost="true" hx-swap='outerHTML'
            onsubmit="calculateTotal();ModifyInput($(`input[form='form_@(detail is not null? detail.RowUniqueId.ToString() : "new_row")'].currency`));"
            hx-target='#row_@(detail is not null? detail.RowUniqueId.ToString() : "new_row")'
            id="form_@(detail is not null? detail.RowUniqueId.ToString() : "new_row")" method="post">
        </form>

        <input type="hidden" form="form_@(detail is not null? detail.RowUniqueId.ToString() : "new_row")"
            name="@nameof(detail.RowUniqueId)" value="@detail?.RowUniqueId">
        <input type="hidden" form="form_@(detail is not null? detail.RowUniqueId.ToString() : "new_row")"
            name="@nameof(detail.OrderId)" value="@(detail?.OrderId ?? OrderID)">
    }
    <td>
        @if (ViewMode == ViewMode.Detail)
        {
            @(detail?.ItemId ?? "")
        }
        else
        {
            <input type="hidden" value="@(detail?.ItemId ?? "")" name="@nameof(detail.ItemId)"
                form="form_@(detail is not null? detail.RowUniqueId.ToString() : "new_row")"
                id="@nameof(detail.ItemId)_@(detail?.RowUniqueId)">
            <select
                hx-get="/OrderDetail/@(ViewMode == ViewMode.Edit? $"{ViewMode}/{detail?.RowUniqueId}": ViewMode)?FormID=SS75&OrderId=@(detail?.OrderId ?? OrderID)"
                hx-target='#row_@(detail is not null? detail.RowUniqueId.ToString() : "new_row")' hx-swap='outerHTML'
                form="form_@(detail is not null? detail.RowUniqueId.ToString() : "new_row")"
                name="@nameof(detail.ItemId)Select" class="form-control selectpicker "
                id="@nameof(detail.ItemId)_@(detail?.RowUniqueId)_select" value="@(detail?.ItemId ?? "")">
                @foreach (var item in Model.Items.Keys)
                {
                    <option value="@item" selected='@(item == detail?.ItemId)'>
                        @item
                    </option>
                }
            </select>
            <ErrorMember Errors="@Model.Errors" MemberName="@nameof(detail.ItemId)" />
            <script>
                var select = new SlimSelect({
                    select: '#@nameof(detail.ItemId)_@(detail is not null ? detail.RowUniqueId.ToString() : "editing")_select',
                    events: {
                        afterChange: (newVal) => {
                            $("#@nameof(detail.ItemId)_@(detail is not null ? detail.RowUniqueId.ToString() : "editing")").val(newVal[0]?.value ?? "");
                        }
                    }
                });
            </script>
        }
    </td>
    <td>
        <div name='ItemName' id="ItemName_@(detail?.RowUniqueId)">
            @(FullItem?.ItemName)
        </div>
    </td>
    <td>
        <div name='InvUnitOfMeasr' id="InvUnitOfMeasr_@(detail?.RowUniqueId)">
            @(FullItem?.InvUnitOfMeasr)
        </div>
    </td>
    <td>
        @if (ViewMode == ViewMode.Detail)
        {
            @((detail?.Quantity ?? 0))
        }
        else
        {
            <input type="text" readonly="@(ViewMode == ViewMode.Detail)" value="@detail?.Quantity" class="form-control"
                oninput="calculatePrice('@detail?.RowUniqueId')"
                form="form_@(detail is not null? detail.RowUniqueId.ToString() : "new_row")" name="@nameof(detail.Quantity)"
                id="@nameof(detail.Quantity)_@(detail?.RowUniqueId)" />
            <ErrorMember Errors="@Model.Errors" MemberName="@nameof(detail.Quantity)" />
        }

    </td>
    <td>
        <div class="currency" name='ConvertPrices' id="@nameof(detail.ConvertPrice)_@(detail?.RowUniqueId)">
            @((detail?.ConvertPrice ?? 0).ToString("C", CultureInfo.CurrentCulture))
        </div>
    </td>
    <td class="currency">
        <div class="currency" name='ConvertAmount' id="@nameof(detail.ConvertAmount)_@(detail?.RowUniqueId)">
            @((detail?.ConvertAmount ?? 0).ToString("C", CultureInfo.CurrentCulture))
        </div>
    </td>
    <td>
        <div class="currency" name='TaxRate' id="@nameof(detail.TaxRate)_@(detail?.RowUniqueId)">
            @Convert.ToInt64(detail?.TaxRate)
        </div>
    </td>
    <td class="currency">
        <div class="currency" name='ConvertTaxAmount' id="@nameof(detail.ConvertTaxAmount)_@(detail?.RowUniqueId)">
            @((detail?.ConvertTaxAmount ?? 0).ToString("C", CultureInfo.CurrentCulture))
        </div>
    </td>
    <td class="currency">
        @if (ViewMode == ViewMode.Detail)
        {
            @(Convert.ToInt64(detail?.DiscountPercent))
        }
        else
        {
            <input type="text" readonly="@(ViewMode == ViewMode.Detail)" class="form-control currency"
                oninput="calculatePrice('@detail?.RowUniqueId')"
                form="form_@(detail is not null? detail.RowUniqueId.ToString() : "new_row")"
                value="@(Convert.ToInt64(detail?.DiscountPercent))" name="@nameof(detail.DiscountPercent)"
                id="@nameof(detail.DiscountPercent)_@(detail?.RowUniqueId)" />
            <ErrorMember Errors="@Model.Errors" MemberName="@nameof(detail.DiscountPercent)" />
        }
    </td>
    <td class="currency">
        @if (ViewMode == ViewMode.Detail)
        {
            <div class="currency" name='ConvertDiscAmount' id="@nameof(detail.ConvertDiscAmount)_@(detail?.RowUniqueId)">
                @((detail?.ConvertDiscAmount ?? 0).ToString("C", CultureInfo.CurrentCulture))
            </div>

        }
        else
        {
            <input type="text" readonly="@(ViewMode == ViewMode.Detail)" class="form-control currency" onload="mask(this)"
                form="form_@(detail is not null? detail.RowUniqueId.ToString() : "new_row")"
                value="@(Convert.ToInt64(detail?.ConvertDiscAmount))" name="@nameof(detail.ConvertDiscAmount)"
                id="@nameof(detail.ConvertDiscAmount)_@(detail?.RowUniqueId)" />
            <ErrorMember Errors="@Model.Errors" MemberName="@nameof(detail.ConvertDiscAmount)" />
        }
    </td>
    <td>
        @if (ViewMode == ViewMode.Detail)
        {
            @(@detail?.NumOfTaxCode)
        }
        else
        {
            <input type="hidden" id="@nameof(detail.NumOfTaxCode)_@(detail?.RowUniqueId)"
                form="form_@(detail is not null? detail.RowUniqueId.ToString() : "new_row")"
                name="@nameof(detail.NumOfTaxCode)" value="@detail?.NumOfTaxCode" />
            <select readonly="@(FullItem?.AllowEditNumOfTaxCode ?? true)" name="@nameof(detail.NumOfTaxCode)_select"
                class="form-control selectpicker" id="@nameof(detail.NumOfTaxCode)_@(detail?.RowUniqueId)_select"
                form="form_@(detail is not null? detail.RowUniqueId.ToString() : "new_row")" value="@detail?.NumOfTaxCode">
                @foreach (var item in Model.TaxCodes)
                {
                    <option value="@item.TaxCodeId">
                        @item.TaxCodeId
                    </option>
                }
            </select>
            <ErrorMember Errors="@Model.Errors" MemberName="@nameof(detail.NumOfTaxCode)" />
            <script>
                var select = new SlimSelect({
                    select: '#@nameof(detail.NumOfTaxCode)_@(detail is not null ? detail.RowUniqueId.ToString() : "editing")',
                    events: {
                        afterChange: (newVal) => {
                            console.log(newVal);
                            $("#@nameof(detail.NumOfTaxCode)_@(detail is not null ? detail.RowUniqueId.ToString() : "editing")").val(newVal.map(f => f.value).join(","));
                        }
                    }
                });
            </script>
        }

    </td>
    <td>
        @if (ViewMode == ViewMode.Detail)
        {
            @(FullItem?.AllowEditNumOfUser ?? false ? detail?.NumOfPc : FullItem?.DefNumOfPc)
        }
        else
        {
            <input type="number" readonly="@(!FullItem?.AllowEditNumOfPc ?? true)" class="form-control" min='0'
                value="@(FullItem?.AllowEditNumOfUser??false ? detail?.NumOfPc : FullItem?.DefNumOfPc)"
                name="@nameof(detail.NumOfPc)" form="form_@(detail is not null? detail.RowUniqueId.ToString() : "new_row")"
                id="@nameof(detail.NumOfPc)_@(detail?.RowUniqueId)" />
            <ErrorMember Errors="@Model.Errors" MemberName="@nameof(detail.NumOfPc)" />
        }
    </td>
    <td>
        @if (ViewMode == ViewMode.Detail)
        {
            @(FullItem?.AllowEditNumOfUser ?? false ? detail?.NumOfData : FullItem?.DefNumOfData)
        }
        else
        {
            <input type="number" readonly="@(!FullItem?.AllowEditNumOfData ?? true)" class="form-control" min='0'
                form="form_@(detail is not null? detail.RowUniqueId.ToString() : "new_row")"
                value="@(FullItem?.AllowEditNumOfUser??false ? detail?.NumOfData : FullItem?.DefNumOfData)"
                name="@nameof(detail.NumOfData)" id="@nameof(detail.NumOfData)_@(detail?.RowUniqueId)" />
            <ErrorMember Errors="@Model.Errors" MemberName="@nameof(detail.NumOfData)" />
        }
    </td>
    <td>
        @if (ViewMode == ViewMode.Detail)
        {
            @(FullItem?.AllowEditNumOfUser ?? false ? detail?.NumOfUser : FullItem?.DefNumOfUser)
        }
        else
        {
            <input type="number" class="form-control " readonly="@(!FullItem?.AllowEditNumOfUser ?? true)"
                value="@(FullItem?.AllowEditNumOfUser??false ? detail?.NumOfUser : FullItem?.DefNumOfUser)"
                name="@nameof(detail.NumOfUser)" min='0'
                form="form_@(detail is not null? detail.RowUniqueId.ToString() : "new_row")"
                id="@nameof(detail.NumOfUser)_@(detail?.RowUniqueId)" />
            <ErrorMember Errors="@Model.Errors" MemberName="@nameof(detail.NumOfUser)" />
        }
    </td>
    <td>
        @if (ViewMode == ViewMode.Detail)
        {
            @(detail?.StartDate is not null ? detail.StartDate.Value.ToString(CultureInfo.CurrentCulture) : "")
        }
        else
        {
            <input data-provide="datepicker" readonly="@(ViewMode == ViewMode.Detail)" type="date"
                name="@nameof(detail.StartDate)"
                form="form_@(detail is not null? detail.RowUniqueId.ToString() : "new_row")"
                id="@nameof(detail.StartDate)_@(detail?.RowUniqueId)"
                value="@(detail?.StartDate is not null ? detail.StartDate.Value.ToString("yyyy-MM-dd") : "")"
                class="form-control">
            <ErrorMember Errors="@Model.Errors" MemberName="@nameof(detail.StartDate)" />
        }

    </td>
    <td>
        @if (ViewMode == ViewMode.Detail)
        {
            @(FullItem?.AllowEditNumOfMonth ?? false ? FullItem.DefNumOfMonth : detail?.NumOfMonth)
        }
        else
        {
            <input readonly="@(FullItem?.AllowEditNumOfMonth ?? false)" type="number" name="@nameof(detail.NumOfMonth)"
                min='0' form="form_@(detail is not null? detail.RowUniqueId.ToString() : "new_row")"
                id="@nameof(detail.NumOfMonth)_@(detail?.RowUniqueId)"
                value="@(FullItem?.AllowEditNumOfMonth ?? false? FullItem.DefNumOfMonth: detail?.NumOfMonth)"
                class="form-control">
            <ErrorMember Errors="@Model.Errors" MemberName="@nameof(detail.NumOfMonth)" />
        }
    </td>
    @if (ViewMode == ViewMode.Detail)
    {
        <td>
            <a href="/OrderDetail/Edit/@detail?.RowUniqueId" hx-push-url="false"
                hx-target="#row_@(detail is not null? detail.RowUniqueId.ToString() : "new_row")" hx-swap="outerHTML">
                <span class="mdi mdi-pencil"></span>
            </a>
            <a href="/OrderDetail/Remove/@detail?.RowUniqueId" hx-push-url="false"
                hx-target="#row_@(detail is not null? detail.RowUniqueId.ToString() : "new_row")" hx-swap="outerHTML">
                <span class="mdi mdi-delete"></span>
            </a>
        </td>
    }
    @if (ViewMode == ViewMode.Edit)
    {
        <td>
            <input type="submit" class="btn btn-success" value="Lưu" hx-push-url="false"
                form='form_@(detail is not null? detail.RowUniqueId.ToString() : "new_row")'>
            <button class="btn btn-dark" hx-get='/OrderDetail/Detail/@detail?.RowUniqueId' hx-swap='outerHTML'
                hx-push-url="false"
                hx-target='#row_@(detail is not null? detail.RowUniqueId.ToString() : "new_row")'>Hủy</button>
        </td>
    }
    @if (ViewMode == ViewMode.Create)
    {
        <td>
            <input type="submit" class="btn btn-success" value="Lưu" hx-on:click="$('#add-new-btn').removeAttr('readonly');"
                hx-push-url="false" form="form_@(detail is not null? detail.RowUniqueId.ToString() : "new_row")">
            <button onclick="$('#add-new-btn').removeAttr('readonly');document.getElementById('row_').remove();"
                hx-push-url="false" class="btn btn-dark">Hủy</button>
        </td>
    }
</tr>

@code {
    [Parameter] public ViewMode ViewMode { get; init; } = ViewMode.Detail;
    [Parameter] public OrderDetailModifyModel Model { get; set; } = null!;
    [Parameter] public OrderDetailSimpleView? detail { get; set; } = null!;
    [Parameter] public Dictionary<string, string>? Errors { get; set; }
    [Parameter] public ViwFullItem? FullItem { get; set; }
    [Parameter] public Guid? OrderID { get; set; } = null!;
}